parameters:
- name: forceRelease
  type: boolean
  default: false

pool:
  vmImage: windows-latest

steps:
- pwsh: |
    Install-Module PowerShellGet -RequiredVersion '3.0.17-beta17' -AllowPrerelease -Force
  displayName: install PowerShellGet v3
- pwsh: |
    $dir = "$(Agent.TempDirectory)\LocalRepo"
    New-Item -Path $dir -ItemType directory
    Register-PSResourceRepository LocalRepo -Uri $dir -Trusted
  displayName: register local powershell repository
- pwsh: .\Publish.ps1
  displayName: prepare module for publishing
- pwsh: Publish-PSResource -Path .\output\AzPipelineVariable -Repository LocalRepo
  displayName: publish module to local repository
- pwsh: |
    Install-PSResource AzPipelineVariable -Repository LocalRepo -Prerelease    
    Import-Module AzPipelineVariable
    Invoke-Pester -Configuration (New-PesterConfiguration @{
      TestResult = @{ Enabled = $true; OutputFormat = 'NUnitXml' }
      Run = @{
        Container = New-PesterContainer `
          -Path 'AzPipelineVariable.Tests.ps1' `
          -Data @{ SkipImport = $true }
      }
    })
- task: PublishTestResults@2
  displayName: publish test results
  condition: always()
  inputs:
    testResultsFiles: testResults.xml
    testResultsFormat: NUnit
- pwsh: |
    Publish-PSResource -Path .\output\AzPipelineVariable -Repository PSGallery -ApiKey $Env:API_KEY
  condition: and(succeeded(), eq(variables['forceRelease'], 'true'))
  env:
    API_KEY: $(PSGalleryApiKey)